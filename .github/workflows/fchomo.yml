name: OpenWrt IPK

on:
  workflow_dispatch:

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Initialize build environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
        sudo apt update -y
        sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache clang cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib \
          g++-multilib git gnutls-dev gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev \
          libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses-dev libpython3-dev \
          libreadline-dev libssl-dev libtool libyaml-dev libz-dev lld llvm lrzsz mkisofs msmtp nano \
          ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip python3-ply python3-docutils \
          python3-pyelftools qemu-utils re2c rsync scons squashfs-tools subversion swig texinfo uglifyjs \
          upx-ucl unzip vim wget xmlto xxd zlib1g-dev zstd
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /upload
        sudo chown $USER:$GROUPS /upload

    - name: Compile the firmware
      id: compile
      run: |
        # Download the OpenWrt SDK
        wget https://downloads.immortalwrt.org/releases/23.05.4/targets/x86/64/immortalwrt-sdk-23.05.4-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz

        # Extract the SDK
        tar xvf immortalwrt-sdk-23.05.4-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz

        # List the extracted files to check directory name(s)
        ls -l

        # Use find to identify the exact directory
        SDK_DIR=$(find . -type d -name 'immortalwrt-sdk*' | head -n 1)

        # Change directory to the identified SDK directory
        cd "$SDK_DIR"

        # First run to generate a default .config file
        make defconfig

        # Update and install feeds
        ./scripts/feeds update -a
        ./scripts/feeds install -a

        # Clone the openwrt-fchomo package
        git clone --depth 1 --branch master --single-branch --no-checkout https://github.com/muink/openwrt-fchomo.git package/openwrt-fchomo
        pushd package/openwrt-fchomo
        umask 022
        git checkout master  # Make sure you're on the right branch or commit
        popd

        # Configure package to be built
        echo "CONFIG_PACKAGE_luci-app-fchomo=y" >> .config

        # Compile the package
        make package/luci-app-fchomo/compile V=s BUILD_LOG=y -j$(nproc)

    - name: Organize files
      id: organize
      run: |
        # Ensure 'upload' is a directory
        if [ ! -d "upload" ]; then
          mkdir -p upload
        fi
        
        # Move the IPK files to the upload folder
        find . -type f -name "*.ipk" -exec cp {} upload/ \;

        # Set the current timestamp for file naming
        echo "FILE_DATE=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Upload bin directory
      uses: actions/upload-artifact@v3
      with:
        name: IPK-${{ env.FILE_DATE }}
        path: upload
